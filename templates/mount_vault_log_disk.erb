#!/bin/bash

export FDISK_CMD="n\np\n1\n\n\nt\n83\nw\n"
export FSTAB=/etc/fstab
export MOUNT_POINT=<%= @log_dir %>

export extra_partition_path=
export fstab_entry=
export extra_device_path=

function find_extra_device() {
    echo "Finding extra device name from mount"

    extra_device_path=$(mount | awk '/.* \/ / {sub(/a[0-9]$/, "b", $1); print $1}')

    [ "$extra_device_path" == "" ] && \
    (echo "Could not find device path: $extra_device_path does not exist"; exit 1)

}

function ensure_mount_point() {
    echo "Ensuring that the mount point $MOUNT_POINT exists"

    [ -e $MOUNT_POINT ] || (mkdir -p $MOUNT_POINT)
}

function ensure_partition() {
    echo "Ensuring that the partition $extra_partition_path exists"

    [ -e $extra_partition_path ] || (printf $FDISK_CMD | fdisk $extra_device_path
                                     mkfs.ext4 $extra_partition_path)
}

function ensure_fstab() {
    echo "Ensuring that an entry for $extra_partition_path is in $FSTAB"

    grep $extra_partition_path $FSTAB &> /dev/null || echo "$fstab_entry" >> $FSTAB
}

function ensure_mount() {
    echo "Ensuring that $extra_partition_path is mounted"

    mount | grep $extra_partition_path > /dev/null || mount -a
    mount | grep $extra_partition_path > /dev/null || ( echo "Could not mount $extra_partition_path"; exit 1 )
}

function ensure_mount_point_permissions() {
    [ -e $MOUNT_POINT ] && chown -R <%= @vault_user %>:<%= @adm_group %> $MOUNT_POINT && chmod 0775 $MOUNT_POINT
}

function setup() {
    find_extra_device

    extra_partition_path=${extra_device_path}1
    fstab_entry="$extra_partition_path $MOUNT_POINT    ext4   defaults,discard        0 0"

    ensure_mount_point
    ensure_partition
    ensure_fstab
    ensure_mount
    ensure_mount_point_permissions
}

setup